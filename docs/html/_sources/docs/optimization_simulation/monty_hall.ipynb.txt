{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Monty Hall Problem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "e9c07ea21bcd460ca905ca3f4678c7e4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "interactive(children=(BoundedIntText(value=10, description='Sample Size:', max=10000, min=10), Button(descriptâ€¦"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from IPython.display import display, HTML\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from ipywidgets import *\n",
    "\n",
    "def montyhall(sample_size):\n",
    "    prizes = [np.append(np.random.permutation(prizes),[1,1])\\\n",
    "              for prizes in np.tile(['goat', 'goat', 'car'], (sample_size,1))]\n",
    "    prizes = [np.append(r,np.where(r=='car')[0]+1) for r in prizes]\n",
    "    prizes = [np.append(r,np.random.choice(list(set(np.where(r=='goat')[0]+1)-{1}))) for r in prizes]\n",
    "    prizes = [np.append(r,list({'2','3'}-{r[-1]})[0]) for r in prizes]    \n",
    "    df = pd.DataFrame(prizes, columns=['door1','door2','door3','select', 'keep', 'prize', 'open','switch'])\n",
    "    df['win'] = 'NA'\n",
    "    df.win[df.prize==df.keep] = 'keep'\n",
    "    df.win[df.prize==df.switch] = 'switch'\n",
    "    fig, axes = plt.subplots(1, 1, figsize = (12,6))\n",
    "    ax = sns.countplot(x='win', data=df, order=df['win'].value_counts().sort_values().index, ax=axes)\n",
    "    total = len(df.win)\n",
    "    nbars = len(ax.patches)\n",
    "    for p in ax.patches:\n",
    "        percentage = '{:.1f}%'.format(100 * p.get_height()/total)\n",
    "        x = p.get_x() + p.get_width()/2 -.05\n",
    "        y = p.get_y() + p.get_height() + total/100\n",
    "        ax.annotate(percentage, (x, y))\n",
    "\n",
    "    ax.spines['right'].set_visible(False)\n",
    "    ax.spines['top'].set_visible(False)\n",
    "    plt.show()\n",
    "    display(df.head(10))\n",
    "\n",
    "widgets.interact_manual.opts['manual_name'] = 'Run Simulation'\n",
    "interact_manual(montyhall,\n",
    "                sample_size=widgets.BoundedIntText(value=10, min=10, max=10000,\n",
    "                                                   description='Sample Size:', disabled=False));"
   ]
  }
 ],
 "metadata": {
  "hide_input": false,
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
